version: '3.3'

services:
  
  postgres:
    container_name: todo_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME:-todo}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-todo}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./DbScripts:/scripts
      - ./DbScripts/migration.sql:/docker-entrypoint-initdb.d/migration.sql
    ports:
      - "5433:5432"
    networks:
      - todo_net
    restart: unless-stopped
  
  webapp:
    container_name: todo_webapp
    build:
      context: .
      dockerfile: ./WebApp/Dockerfile
    ports:
      - "8001:80"
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      DB_CONNECTION_STRING: "host=${DB_HOST:-todo_postgres};port=${DB_PORT:-5432};database=${DB_DATABASE:-todo};username=${DB_USERNAME:-todo};password=${DB_PASSWORD:-todo};"
    networks:
      - todo_net
    restart: unless-stopped

  webapi:
    container_name: todo_webapi
    build:
      context: .
      dockerfile: ./WebApi/Dockerfile
    ports:
      - "8002:80"
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      DB_CONNECTION_STRING: "host=${DB_HOST:-todo_postgres};port=${DB_PORT:-5432};database=${DB_DATABASE:-todo};username=${DB_USERNAME:-todo};password=${DB_PASSWORD:-todo};"
    networks:
      - todo_net
    restart: unless-stopped
  
  pgadmin:
    container_name: todo_pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5051}:80"
    networks:
      - todo_net
    restart: unless-stopped

networks:
  todo_net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
