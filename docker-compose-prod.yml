version: '3.3'
    
services: 
  webapp:
    container_name: todo_webapp
    build:
      context: .
      dockerfile: ./WebApp/Dockerfile
    ports:
      - "8081:80"
    depends_on: 
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      DB_CONNECTION_STRING: "host=${DB_HOST:-todo_postgres};port=${DB_PORT:-5432};database=${DB_DATABASE:-todo};username=${DB_USERNAME:-todo};password=${DB_PASSWORD:-todo};"
    networks: 
      - todo_net
    restart: unless-stopped  
  
  webapi:
    container_name: todo_webapi
    build:
      context: .
      dockerfile: ./WebApi/Dockerfile
    ports:
      - "8082:80"
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      DB_CONNECTION_STRING: "host=${DB_HOST:-todo_postgres};port=${DB_PORT:-5432};database=${DB_DATABASE:-todo};username=${DB_USERNAME:-todo};password=${DB_PASSWORD:-todo};"
    networks:
      - todo_net
    restart: unless-stopped
    
  postgres:
    container_name: todo_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME:-todo}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-todo}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./DbScripts:/scripts
      - ./DbScripts/migration.sql:/docker-entrypoint-initdb.d/migration.sql
    ports:
      - "5432"
    networks:
      - todo_net
    restart: unless-stopped
    
networks:
  todo_net:
    driver: bridge

volumes:
  postgres:
